{"version":3,"sources":["images/schematic.svg","images/sample_invaders.svg","components/P5Wrapper/sketch1/index.js","components/P5Wrapper/index.jsx","components/FullStackCraftProductionLabel.jsx","components/App/index.jsx","index.js"],"names":["module","exports","__webpack_require__","p","sketch1","s","props","onSetAppState","mx","my","sz","step","padding","number","aColors","color","oBackgroundColor","setup","iMaxInvaders","data","length","canvasWidth","Math","ceil","createCanvas","background","stroke","invaders","y","height","x","width","invader","Invader","push","i","display","_x","_y","_number","Object","classCallCheck","this","col","Array","position","j","m","k","c","block_string","charAt","rank","createClass","key","value","fill","noStroke","rect","P5Wrapper","canvas1","window","p5","p5Props","canvasId","nextProps","remove","react_default","a","createElement","id","style","textAlign","Component","FullStackCraftProductionLabel","Fragment","rel","href","className","target","alt","src","aData","schematic","require","sampleInvaders","App","newState","cb","_this","setState","aElements","innerWidth","toString","replace","P5Wrapper_P5Wrapper","marginBottom","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a4e764d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/schematic.897bb352.svg\";","module.exports = __webpack_public_path__ + \"static/media/sample_invaders.a0ac3978.svg\";","export default function (s) {\n    s.props = {} // as a safety for when props is not defiend\n    s.onSetAppState = () => {}\n    var sz = 15; // space invader size - 15 blocks\n    var step = sz/5; // = 3\n    var padding = (sz/2); // = 7.5\n    var mx,my;\n    let number = 0;\n    const aColors = [s.color(132, 94, 194), s.color(214, 93, 177), s.color(255, 111, 145), s.color(255, 150, 113), s.color(255, 199, 95), s.color(249, 248, 113), s.color(44, 115, 210), s.color(0, 142, 155), s.color(0, 143, 122), s.color(155, 222, 126), s.color(75, 188, 142), s.color(3, 149, 144), s.color(28, 110, 125), s.color(47, 82, 107), s.color(26, 36, 120)]\n    const oBackgroundColor = s.color(0,0,0);\n    s.setup = function() {\n      let iMaxInvaders = s.props.data.length;\n      mx = ((s.props.canvasWidth - (2*padding))/(sz+padding)); // num invaders per row\n      if (s.props.canvasWidth >= 690) {\n        my = Math.ceil(iMaxInvaders / mx)*(sz+padding) + padding; // the number of rows (y distance) is the total number of invaders, divided by invaders per row, times padding!\n      } else {\n        my = Math.ceil(iMaxInvaders / mx)*(sz+(1.3*padding)); // the number of rows (y distance) is the total number of invaders, divided by invaders per row, times padding!\n      }\n      s.createCanvas(padding+mx*(sz+padding), my);\n      s.background(oBackgroundColor);\n      s.stroke(0);\n      let invaders = [];\n      for (var y = padding; y < s.height-2*padding; y += (sz+padding)) {\n        for (var x = padding; x < s.width-2*padding; x += (sz+padding)) {  \n          if (number < iMaxInvaders) {\n            var invader = new Invader(x, y, number);\n            number = number + 1\n            invaders.push(invader);\n          }\n        }\n      }\n      number = 0;\n      for (var i=0; i < invaders.length;i++) {\n        if (number < iMaxInvaders) {\n          invaders[i].display();\n        }\n      }\n    }\n    class Invader {\n      constructor(_x, _y, _number) {\n        this.x = _x;\n        this.y = _y;\n        this.number = _number;\n        this.col = new Array(sz);\n        for(var i = 0; i < sz; i++) {\n          this.col[i] = new Array(sz);\n        }\n        var position = 0;\n        for (var j = 0; j < sz; j+=step) {\n          var m = 1;\n          for (var k = 0; k < sz / 2; k+=step) {\n            this.c = (s.props.data[this.number].block_string.charAt(position) === \"1\") ? aColors[s.props.data[this.number].rank - 1] : oBackgroundColor;  // either filled with rank color or white\n            position = position + 1;\n            this.col[j][k] = this.c;\n            this.col[j][k+(sz-step)/m] = this.c;\n            m++;\n          }\n        }\n      }\n\n      display() {\n        s.fill(this.c);\n        s.stroke(this.c);\n        for (var j = 0;j<sz; j+=step) {\n          for (var i = 0;i<sz; i+= step) {\n            s.fill(this.col[j][i]);\n            s.noStroke();\n            s.rect(this.x + i, this.y + j, step, step);\n          }\n        }\n      }\n    }\n}\n\n","import React, { Component } from \"react\";\n\nimport sketch1 from \"./sketch1\";\n\nexport default class P5Wrapper extends Component {\n  componentDidMount() {\n    this.canvas1 = new window.p5(sketch1, this.props.p5Props.canvasId);\n    this.canvas1.props = this.props.p5Props;\n    this.canvas1.onSetAppState = this.props.onSetAppState;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    this.canvas1.props = nextProps.p5Props;\n    return false;\n  }\n\n  componentWillUnmount() {\n    this.canvas1.remove();\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.p5Props.canvasId}\n        style={{ width: \"100%\", textAlign: \"center\" }}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport './styles.scss';\n\nexport function FullStackCraftProductionLabel() {\n  return (\n    <>\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Fira+Code:wght@700&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <a\n        className=\"full-stack-craft-button\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://fullstackcraft.com\"\n      >\n        <img alt=\"Full Stack Craft Logo\" src=\"https://coffee-app.sfo2.cdn.digitaloceanspaces.com/fullstackcraft/logo.jpg\" />\n        <span>A Full Stack Craft Production</span>\n      </a>\n    </>\n  );\n}\n","import React, { Component } from 'react'\n\nimport P5Wrapper from '../P5Wrapper'\n\nimport { FullStackCraftProductionLabel } from '../FullStackCraftProductionLabel'\n\n// data\nimport oJSONDataRank1 from '../../data/data_rank_1';\nimport oJSONDataRank2 from '../../data/data_rank_2';\nimport oJSONDataRank3 from '../../data/data_rank_3';\nimport oJSONDataRank4 from '../../data/data_rank_4';\nimport oJSONDataRank5 from '../../data/data_rank_5';\nimport oJSONDataRank6 from '../../data/data_rank_6';\nimport oJSONDataRank7 from '../../data/data_rank_7';\nimport oJSONDataRank8 from '../../data/data_rank_8';\nimport oJSONDataRank9 from '../../data/data_rank_9';\nimport oJSONDataRank10 from '../../data/data_rank_10';\nimport oJSONDataRank11 from '../../data/data_rank_11';\nimport oJSONDataRank12 from '../../data/data_rank_12';\nimport oJSONDataRank13 from '../../data/data_rank_13';\nimport oJSONDataRank14 from '../../data/data_rank_14';\nimport oJSONDataRank15 from '../../data/data_rank_15';\nconst aData = [oJSONDataRank1, oJSONDataRank2, oJSONDataRank3, oJSONDataRank4, oJSONDataRank5, oJSONDataRank6, oJSONDataRank7, oJSONDataRank8, oJSONDataRank9, oJSONDataRank10, oJSONDataRank11, oJSONDataRank12, oJSONDataRank13, oJSONDataRank14, oJSONDataRank15];\n\n// images\nconst schematic = require('../../images/schematic.svg');\nconst sampleInvaders = require('../../images/sample_invaders.svg');\n\nexport default class App extends Component {\n    onSetAppState = (newState, cb) => this.setState(newState, cb)\n\n    render() {\n        let aElements = [];\n        let canvasWidth = window.innerWidth > 690 ? 690 : window.innerWidth; // start width calculation for canvases at 690px, otherwise screen width\n        for (var i = 0; i < 15; i++) {\n          let canvasId = \"canvas\" + i.toString() + \"-container\";\n          aElements.push(\n            <div key={i}>\n              <h3>Invaders of Rank {i+1} ({aData[i].length.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} Total):</h3>\n              <P5Wrapper\n                  p5Props={{ data: aData[i], canvasId, canvasWidth }}\n                  onSetAppState={this.onSetAppState}\n              />\n            </div>\n          );\n        }\n        return (\n          <div className=\"container\" style={{marginBottom: '1rem'}}>\n              <h1>Invasion of the Invaders!</h1>\n              <img alt=\"Sample Invaders.\" className=\"sampleInvaders\" src={sampleInvaders}/>\n              <h2><i>What's an Invader?</i></h2>\n              <p>An 'Invader' is a 5 x 5 group of blocks representing a retro-style alien invader, likely inspired from <a target=\"_blank\" rel=\"noopener noreferrer\"  href=\"https://en.wikipedia.org/wiki/Space_Invaders\">1978 the NES game Space Invaders.</a></p>\n              <p>More specifically, an Invader is an array of 15 independently activated or deactivated blocks, arranged in any order, which is then partially reflected along the y axis (1 reflecting to 1', 6 reflecting to 6', and so on) forming the complete 25 block, 5 x 5 group of blocks:</p> \n              <img alt=\"Invader schematic.\" className=\"schematic\" src={schematic}/>\n              <p>There are 2<sup>15</sup>-1 possible unique combinations of this configuration, or 32,768 - 1 = 32,767. We subtract 1 from 32,768, since the Invader with all 15 blocks unactivated would be an empty 5 x 5 group of blocks. (Oppositely, an Invader with all 15 blocks activated is a solid 5 x 5 group of blocks.)</p>\n              <p>Invaders can be further separated by 'rank' - the number of blocks out of the original 15 that have been activated for a given Invader. I've rendered all possible combinations of these Invaders and grouped them by rank.</p>\n              <p>View the <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chrisfrew.in/data-challenge-rendering-all-32767-invaders\">technical blog post with backend and frontend source codes here.</a></p>\n              <p>Enjoy the amazing shapes and forms these Invaders produce!</p>\n              {aElements}\n              <h3>Sources and Inspiration</h3>\n              <p>Originally inspired by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.skillshare.com/projects/Experimenting-with-Processing-and-HYPE/18021?via=user-profile\">Jerome Herr's work on Skillshare from 2013</a>.</p>\n              <p>Jerome Herr was inspired (as was I, subsequently) by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.complexification.net/gallery/machines/invaderfractal/\">Jared Tarbell's work from 2003</a>. I used Jerome's Processing Java code for a starting point, then converting it to p5.js and fixed invader values (as apposed to random generation) <a href=\"https://pastebin.com/umz39Yus\">can be found here</a>.</p>\n              <p>Jared was the real computational hero and <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.complexification.net/gallery/machines/invaderfractal/flash/invaderFractall.html\">provided an interactive flash applet for the fractal art</a> (clicking on any Invader subsequently renders a new Invader in-place, check it out! I'm also working on retreiving the .fla source code to a modern language or tool... but it's harder than you'd think!)</p>\n              <FullStackCraftProductionLabel/>\n          </div>\n        )\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport App from './components/App/'\n\nimport './index.css'\n\nrender(<App />, document.getElementById('root'))\n"],"sourceRoot":""}